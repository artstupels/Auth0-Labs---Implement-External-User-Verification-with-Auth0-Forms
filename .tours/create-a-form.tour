{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "#2 - Create an Auth0 Form",
  "nextTour": "#3 - Create an Auth0 Action",
  "steps": [
    {
      "title": "Create an Auth0 Form",
      "description": "### Lab objective\n\nNext, we will create the Auth0 Form to which users will be redirected, and that’s where they will submit the invitation code.",
      "line": 1
    },
    {
      "title": "Create an Auth0 Vault connection",
      "description": "### Create an Auth0 Vault connection\n\nBefore creating a Form, we must create an **Auth0 Vault connection** that will allow us to fetch the **MockDatabase** user’s **app_metadata** during the Form completion.\n\n1.  From the Auth0 Dashboard, go to **Actions** > **Forms**.\n\n1.  On the Forms page, select on your **tenant name** in the top left corner (this should start with `dev-`).\n    \n2.  Select **Vault**.\n\n    ![Vault button](https://cdn.auth0.com/website/auth0-training/oktane25/2A_1.png)\n    \n3.  Select **Add Vault Connection**.\n    \n4.  Select **Auth0** and select **Continue**.\n    \n5.  Name the connection **Auth0ForFormsLab**\n\n1. Select **Continue**.\n    \n",
      "line": 1
    },
    {
      "file": "notes.yml",
      "description": "## Configure the Auth0 Vault connection\n\n\nNow, you need to provide the Machine-to-machine application's **Tenant domain**, **Client ID**, and **Client Secret,** you noted in the doc opened above.\n\n1. Fill out the fields for **Tenant domain**, **Client ID**, and **Client Secret*** using the values you recorded above.\n    \n1.  Select the **Add Vault Connection** button.",
      "line": 4
    },
    {
      "title": "Create a Form",
      "description": "## Create a Form\n\n1.  Go back to the Forms landing page by selecting the **Forms** button on the top navigation bar.\n    \n2.  Select **Create form**.\n    \n3.  Select **Start from scratch**.\n    \n4.  In the top left corner, you will see **Blank form** text. Select it to **change the Form name** to **PrivateBetaForm**.\n    \nIn the next steps, we'll add Auth0 Form nodes according to our design below:\n\n![Complete Form Diagram](https://cdn.auth0.com/website/auth0-training/oktane25/2B_1.png)",
      "line": 1
    },
    {
      "title": "The first Step node",
      "description": "## The first Step node\n\nYou will see an empty **Step** node connected to the **Start** and **Ending screen** nodes. Let’s edit it:\n\n1.  From the **Components** pane, drag and drop the **Rich text** block component on this Step node.\n\n    ![Complete Form Diagram](https://cdn.auth0.com/website/auth0-training/oktane25/2C_1.png)\n\n    1.  In the **Block settings** pane, add the following text: \n    >Heads up! This application is in private beta. Do you have the invitation code?\n        \n    2.  Select **Save**.\n        \n2.  Now, drag the **Boolean** field component from the **Components** pane and drop it **between** the **Rich text** and the **Continue** button.\n\n    ![Complete Form Diagram](https://cdn.auth0.com/website/auth0-training/oktane25/2C_2.png)\n\n    1.  In the **Field settings** pane, do the following:\n        *  Change the **ID** to **YES_OR_NO**.\n        \n        * Uncheck **Label**.\n        \n        * Select **Required**.  \n            \n        ![Complete Form Diagram](https://cdn.auth0.com/website/auth0-training/oktane25/2C_3.png)\n            \n        *   Select **Save**.\n            \n3.  Select **Publish** in the top right corner to save the current Form to avoid losing the progress.",
      "line": 1
    },
    {
      "title": "Create a Router node",
      "description": "## Create a Router node\n\nAs our first Step node asks a user if they have an invitation code, we need to create a Router node that will route a user to the next screen based on their selected answer.\n\n1.  In the floating box at the bottom, select **Router**.\n\n    ![Click Router](https://cdn.auth0.com/website/auth0-training/oktane25/2D_1.png)\n\n2.  A new Router is created. Select this new Router, and the **Router settings** pane should open.\n\n3.  From the Router Settings pane, select **Rule 1**.\n\n4.  Change Rule 1's **Alias** to **Has an invitation code?**.\n\n5. Still in the Rule, select the **+** button (Add variable) of the first input field.\n\n6. Select a **YES_OR_NO** field.\n\n7.   The conditional statement should be **is equal to**.\n\n8.  In the bottom field, type **true**.\n\n9.  Confirm it looks like this and then select **Save,** and then **Save** again:\n\n    ![Router Rule](https://cdn.auth0.com/website/auth0-training/oktane25/2D_2.png)\n\n7.  Now you must add the Router to the Form sequence. To do this, follow these steps:\n\n    1.  **Delete the link** between the **first Step** and the **Ending screen** nodes.\n\n        ![Delet link](https://cdn.auth0.com/website/auth0-training/oktane25/2D_3.png)\n\n    2.  Click the **Yellow Dot** on the right side of the **first Step node (output port)** and drag it to the **Yellow Dot** on the left side of the **Router node (input port)**.\n\n        ![Connecting nodes](https://cdn.auth0.com/website/auth0-training/oktane25/2D_4.png)\n\n8.  Our Form should look like this:\n\n    ![Form at this stage](https://cdn.auth0.com/website/auth0-training/oktane25/2D_5.png)\n\n    Note that there are a few warnings shown, as some of our nodes don't have connections to other nodes. We will fix it later, as we need to add a few more between the Router and the Ending screen nodes.\n\n9.  Click **Publish** in the top right corner to save the current Form to avoid losing the progress.",
      "line": 1
    },
    {
      "title": "Add Router to Form sequence",
      "description": "## Add Router to Form sequence\n\nNow you must add the Router to the Form sequence. \n\n1.  Delete **the link** between the **first Step** and the **Ending screen** nodes.\n\n    ![Delete link](https://cdn.auth0.com/website/auth0-training/oktane25/2D_3.png)\n\n2.  Select the **Yellow Dot** on the right side of the **first Step node (output port)** and drag it to the **Yellow Dot** on the left side of the **Router node (input port)**.\n\n    ![Connecting nodes](https://cdn.auth0.com/website/auth0-training/oktane25/2D_4.png)\n\n3.  Our Form should now look like this:\n\n    ![Form at this stage](https://cdn.auth0.com/website/auth0-training/oktane25/2D_5.png)\n\n    > Note that there are a few warnings shown, as some of our nodes don't have connections to other nodes. We will fix it later, as we need to add a few more between the Router and the Ending screen nodes.\n\n9.  Select **Publish** in the top right corner to save the current Form to avoid losing the progress."
    },
    {
      "title": "Create the YES Step node",
      "description": "## Create the YES Step node\n\nLet's create a Step where a user must provide an invitation code if they've selected **YES** in the previous step.\n\n1.  In the floating box at the bottom, select **Step**.\n\n2.  Drag the **Text** field component from the **Components** pane and drop it above the **Continue** button.\n\n3.  Select the Text field component and in the **Field settings** pane, make the following changes:\n\n    -   Change the **ID** value to **INVITATION_CODE**. We can use the randomly generated ID, but for convenience, we will change it to a custom value to reference it in the next step.\n\n    -   Keep **Label** selected.\n\n    -   Select **Required**.\n\n    -   Update the **Label** value to **Please provide your invitation code here:**.\n\n    -   Set **Placeholder text** to **A0-...**.\n\n    -   Set both **Min. length** and **Max. length** values to **10**.\n\n        ![Field settings](https://cdn.auth0.com/website/auth0-training/oktane25/2E_1.png)\n\n    -   Select **Save**.\n\n4.  Drag the **Previous button** block component from the **Components** pane and drop it below the **Continue** button on the step you just created. This will allow a user to go to the previous screen.\n\n5.  Connect the **TOP output port** (top righthand yellow dot) of the Router step to the **input port** (lefthand yellow dot) of this Step component.\n\n6.  Now our Form should look like this:\n\n    ![Form at this stage](https://cdn.auth0.com/website/auth0-training/oktane25/2E_2.png)\n\n7.  Select **Publish** in the top right corner to save the current Form to avoid losing the progress.",
      "line": 1
    },
    {
      "title": "Create the NO Step node",
      "description": "## Create the NO Step node\n\nLet's create a Step a user should end on if they don't have an invitation code.\n\n1.  In the floating box at the bottom, select **Step**.\n\n2.  Drag the **Rich text** block component from the **Components** pane and drop it above the **Continue** button.\n\n3.  Select the **Rich text** component and in the **Block settings** pane, make the following changes:\n\n    -   Change the **Rich text** to: **Please visit our website to join the private beta version of our app.**\n\n    -   Select **Save**.\n\n4.  Select the **Continue** button, and then click the **Trash can icon** in the **Block settings** pane to delete this component. We don't need our users to continue if they don't have an invitation code.\n\n    ![Delete block](https://cdn.auth0.com/website/auth0-training/oktane25/2F_1.png)\n\n5.  Drag the **Previous button** block component from the **Components** pane and drop it below the **Rich text** component. This will allow a user to go to the previous screen.\n\n6.  Connect the **BOTTOM output port** (bottom righthand yellow dot) of the **Router node** to the **input port** (lefthand yellow dot) of this **Step node**.\n\n7.  Our Form now looks like this:\n\n    ![Form at this stage](https://cdn.auth0.com/website/auth0-training/oktane25/2F_2.png)\n\n8.  Select **Publish** in the top right corner to save the current Form and avoid losing progress. This is important, as we are going to create a Flow in the next steps and want to access the variables available in this Form.",
      "line": 1,
      "selection": {
        "start": {
          "line": 11,
          "character": 40
        },
        "end": {
          "line": 11,
          "character": 110
        }
      }
    },
    {
      "title": "Create a Flow node",
      "description": "## Create a Flow node\n\nWhen a user submits the invitation code, we need to check it against our database to verify that it is valid. To achieve this, we will need to use a Flow.\n\n1.  In the floating box at the bottom, select **Flow**.\n\n1.  When the Flow node is selected, the **Flow settings** pane appears on the right.\n    > Here, we can select a Flow to use, but in our case, we need to click the **Create New Flow** button as we don't have any Flows yet.\n\n1.  Set the new Flow's name to **VERIFY_INVITATION_CODE** and click **Create**.\n\n    ![Flow name](https://cdn.auth0.com/website/auth0-training/oktane25/2G_1.png)\n\n5.  Verify that this flow is now selected on the **Flow settings** page, and then click **Edit Flow**.\n    > This will open a new **Flow Editor** tab in your browser. We'll configure this Flow in the next step.",
      "line": 1
    },
    {
      "title": "Configure Flow node: Get user action",
      "file": "notes.yml",
      "description": "## Configure Flow node: Get user action\nLet's cconfigure the Flow node you just created in the last step.\n\n1.  Just below **Start**, select the **+** button.\n    >The List of actions pane will open.\n\n3.  Scroll down and under the Auth0 section, select the **Get user** action.\n\n4.  When the **Get user** action is selected, update its configuration:\n\n    -   Set ID to **FETCH_MOCKDATABASE**.\n\n    -   Select **Auth0ForFormsLab** in the **Vault connection** dropdown.\n\n    -   In the **User ID** field, paste the MockDatabase user's ID, which is available on the highlighted line above.\n\n        ![Get user action](https://cdn.auth0.com/website/auth0-training/oktane25/2G_2.png)\n\n    -   Select **Save**.\n",
      "line": 2
    },
    {
      "title": "Configure Flow node: If/then condition",
      "description": "## Configure Flow node: If/then condition\n\n1.  Select the **+** button below the **Auth0** action.\n\n6.  Select the **If/then condition** action and create the following condition:\n\n    -   Top field: `{{actions.FETCH_MOCKDATABASE.body.app_metadata.invitation_codes}}`\n\n    -   Conditional statement: **includes**\n\n    -   Bottom field: `{{fields.INVITATION_CODE}}`\n\n        ![If/then condition](https://cdn.auth0.com/website/auth0-training/oktane25/2G_3.png)\n\n        Note that the variables should appear highlighted, as in the screenshot above. What we do here is test whether the user-submitted **Invitation Code** exists in the array of invitation codes returned by our **MockDatabase**.\n\n    -   Select **Save**.\n"
    },
    {
      "title": "Configure Flow node: False path",
      "description": "## Configure Flow node: False path\n\n1.  Select the **+** button under the **FALSE** path of the **If/then condition**.\n\n8.  Select the **Show error message** action.\n\n9.  In the **Error message** field, type **The invitation code doesn't exist!**\n\n10. Select **Save**.\n\n11. Select **Publish** to save the Flow. It should look like this:\n\n    ![Flow diagram](https://cdn.auth0.com/website/auth0-training/oktane25/2G_4.png)\n"
    },
    {
      "title": "Verify Flow node configuration",
      "description": "## Verify Flow node configuration\n\nNow lets return to the **Form** browser tab and ensure that the Flow node is configured correctly and the **VERIFY_INVITATION_CODE** flow is selected.\n\n\n![img](https://cdn.auth0.com/website/auth0-training/oktane25/2G_5.png)\n\nIf the **VERIFY_INVITATION_CODE** flow is not selected and doesn't exist in the dropdown, you might need to refresh the page and try again.\n"
    },
    {
      "title": "Connect the Flow node to the YES Step node",
      "description": "## Connect the Flow node to the YES Step node\n\n\nNow connect the Flow node to the **YES Step node** and complete the form by linking the **Ending screen** node.\n\n\n1.  Select the **Yellow Dot** on the right side of the **YES Step node (output port)** and drag it to the **Yellow Dot** on the left side of the **Flow node (input port)**.\n\n2.  Select the **Yellow Dot** on the right side of the **Flow node (output port)** and drag it to the **Yellow Dot** on the left side of the **Ending screen node**.\n\nNow your Form should look like this:\n\n![img](https://cdn.auth0.com/website/auth0-training/oktane25/2G_6.png)"
    },
    {
      "title": "Get the Form ID",
      "file": "notes.yml",
      "description": "## Get the Form ID\n\nTo render a Form during the authentication flow, we must know the Form ID of the form we want to render. It looks like *\"ap_123...890\"*.\n\n1. Select the **<> Render** button.\n\n\n    >When you click the **<> Render** button, you will notice that it generates the sample **Auth0 Action** script, which you can copy and paste. In our case, we just need to take a note of the Form ID as we will be creating a custom Auth0 Action in the step. You can find the Form ID passed to `api.prompt.render()`.\n\n1. Copy the Form ID and paste it on the line highlighted above next to **Form ID:**.\n\n    ![Action sample code](https://cdn.auth0.com/website/auth0-training/oktane25/2H_2.png)",
      "line": 8
    }
  ]
}